services:
  api1: &api-service
    build:
      context: .
      target: ${BUILD_TARGET:-production}
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - PAYMENT_PROCESSOR_URL_DEFAULT=http://payment-processor-default:8080
      - PAYMENT_PROCESSOR_URL_FALLBACK=http://payment-processor-fallback:8080
    networks:
      - backend
      - payment-processor
    depends_on:
      - postgres
      - redis
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "180MB"

  api2:
    <<: *api-service

  nginx:
    image: nginx:alpine
    ports:
      - "9999:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "15MB"

  postgres:
    image: postgres:alpine
    environment:
      POSTGRES_DB: rinha
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "150MB"

  redis:
    image: redis:alpine
    command: redis-server --maxmemory 125mb --maxmemory-policy allkeys-lru
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "125MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true

volumes:
  postgres_data:
